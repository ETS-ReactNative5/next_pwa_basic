{"code":"!function(e){var t={};function n(o){if(t[o])return t[o].exports;var i=t[o]={i:o,l:!1,exports:{}};return e[o].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&\"object\"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:e}),2&t&&\"string\"!=typeof e)for(var i in e)n.d(o,i,function(t){return e[t]}.bind(null,i));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,\"a\",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p=\"\",n(n.s=0)}([function(e,t,n){\"use strict\";n(1)();const o=[\"/\"];self.addEventListener(\"install\",(function(e){console.log(\"[Service Worker] Installing Service Worker ...\"),e.waitUntil(caches.open(\"static-v27\").then((function(e){console.log(\"[Service Worker] Precaching App Shell\"),e.addAll(o)})))})),self.addEventListener(\"activate\",(function(e){return console.log(\"[Service Worker] Activating Service Worker ....\",e),e.waitUntil(caches.keys().then((function(e){return Promise.all(e.map((function(e){if(\"static-v27\"!==e&&\"dynamic-v5\"!==e)return console.log(\"[Service Worker] Removing old cache.\",e),caches.delete(e)})))}))),self.clients.claim()})),self.addEventListener(\"notificationclick\",e=>{let t=e.notification;if(\"open\"===e.action){let e=location.origin;clients.openWindow(e),t.close()}else console.log(\"Notification _Rejected!\"),t.close()}),self.addEventListener(\"notificationclose\",e=>{let t=e.notification;e.action;console.log(\"notification is closed\",t)}),self.addEventListener(\"fetch\",(function(e){\"POST\"===e.request.method?(console.log(\"post request\"),e.respondWith(fetch(e.request).then(e=>e).catch(e=>e))):e.respondWith(fetch(e.request).then((function(t){return caches.open(\"dynamic-v5\").then((function(n){return n.put(e.request.url,t.clone()),t}))})).catch((function(t){return console.log(\"offline req\"),caches.match(e.request).then(e=>(console.log(\"i got the res in cache\",e),e||(console.log(\"there is no resp for this req in cache!\"),JSON.stringify({message:\"you are offline\"}))))})))})),self.addEventListener(\"push\",(function(e){console.log(\"someone push the notification !!\"),console.log(\"server notification data\",e.data);let t=e.data?JSON.parse(e.data.text()):{title:\"default Title for noitification\",body:\"default -server push notification body\"};var n={body:t.body,vibrate:[100,50,100],data:{dateOfArrival:Date.now(),primaryKey:\"2\"},actions:[{action:\"open\",title:\"Explore this new world\"},{action:\"close\",title:\"Close\"}]};e.waitUntil(self.registration.showNotification(t.title,n))})),self.addEventListener(\"sync\",(function(e){if(\"sync-post\"==e.tag){console.log(\"we have data to post online!!!\");let e={project:\"OfflinePost\",task:\"_OfflinePost_task\",date:\"01 Apr 2020\",description:\"post is onffline\",hours:\"08:00\",userid:\"001\",status:\"pending\"};fetch(\"https://pwa-serv-notify.herokuapp.com/api/pwa/timesheets/add\",{method:\"post\",body:JSON.stringify(e)}).then((function(e){return e.json()})).then((function(e){console.log(\"posteted back to online\")}))}}))},function(e,t,n){\"use strict\";e.exports=()=>{console.log(\"Hello from util.\")}}]);","extractedComments":[]}