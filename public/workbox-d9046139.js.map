{"version":3,"file":"workbox-d9046139.js","sources":["node_modules/workbox-core/_version.js","node_modules/workbox-core/skipWaiting.js","node_modules/workbox-core/clientsClaim.js","node_modules/workbox-core/_private/cacheNames.js","node_modules/workbox-core/_private/getFriendlyURL.js","node_modules/workbox-core/_private/logger.js","node_modules/workbox-core/models/messages/messages.js","node_modules/workbox-core/models/messages/messageGenerator.js","node_modules/workbox-core/_private/WorkboxError.js","node_modules/workbox-core/_private/assert.js","node_modules/workbox-core/models/quotaErrorCallbacks.js","node_modules/workbox-core/_private/executeQuotaErrorCallbacks.js","node_modules/workbox-core/utils/pluginUtils.js","node_modules/workbox-core/_private/cacheWrapper.js","node_modules/workbox-core/_private/fetchWrapper.js","node_modules/workbox-core/_private/canConstructResponseFromBodyStream.js","node_modules/workbox-core/copyResponse.js","node_modules/workbox-precaching/_version.js","node_modules/workbox-precaching/utils/createCacheKey.js","node_modules/workbox-precaching/utils/printCleanupDetails.js","node_modules/workbox-precaching/utils/printInstallDetails.js","node_modules/workbox-precaching/PrecacheController.js","node_modules/workbox-precaching/utils/getOrCreatePrecacheController.js","node_modules/workbox-precaching/utils/removeIgnoredSearchParams.js","node_modules/workbox-precaching/utils/generateURLVariations.js","node_modules/workbox-precaching/utils/getCacheKeyForURL.js","node_modules/workbox-precaching/utils/addFetchListener.js","node_modules/workbox-precaching/addRoute.js","node_modules/workbox-precaching/utils/precachePlugins.js","node_modules/workbox-precaching/precache.js","node_modules/workbox-precaching/precacheAndRoute.js","node_modules/workbox-precaching/utils/deleteOutdatedCaches.js","node_modules/workbox-precaching/cleanupOutdatedCaches.js"],"sourcesContent":["\"use strict\";\r\n// @ts-ignore\r\ntry {\r\n    self['workbox:core:5.1.2'] && _();\r\n}\r\ncatch (e) { }\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport './_version.js';\r\n/**\r\n * Force a service worker to activate immediately, instead of\r\n * [waiting](https://developers.google.com/web/fundamentals/primers/service-workers/lifecycle#waiting)\r\n * for existing clients to close.\r\n *\r\n * @memberof module:workbox-core\r\n */\r\nfunction skipWaiting() {\r\n    // We need to explicitly call `self.skipWaiting()` here because we're\r\n    // shadowing `skipWaiting` with this local function.\r\n    self.addEventListener('install', () => self.skipWaiting());\r\n}\r\nexport { skipWaiting };\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport './_version.js';\r\n/**\r\n * Claim any currently available clients once the service worker\r\n * becomes active. This is normally used in conjunction with `skipWaiting()`.\r\n *\r\n * @memberof module:workbox-core\r\n */\r\nfunction clientsClaim() {\r\n    self.addEventListener('activate', () => self.clients.claim());\r\n}\r\nexport { clientsClaim };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\nconst _cacheNameDetails = {\r\n    googleAnalytics: 'googleAnalytics',\r\n    precache: 'precache-v2',\r\n    prefix: 'workbox',\r\n    runtime: 'runtime',\r\n    suffix: typeof registration !== 'undefined' ? registration.scope : '',\r\n};\r\nconst _createCacheName = (cacheName) => {\r\n    return [_cacheNameDetails.prefix, cacheName, _cacheNameDetails.suffix]\r\n        .filter((value) => value && value.length > 0)\r\n        .join('-');\r\n};\r\nconst eachCacheNameDetail = (fn) => {\r\n    for (const key of Object.keys(_cacheNameDetails)) {\r\n        fn(key);\r\n    }\r\n};\r\nexport const cacheNames = {\r\n    updateDetails: (details) => {\r\n        eachCacheNameDetail((key) => {\r\n            if (typeof details[key] === 'string') {\r\n                _cacheNameDetails[key] = details[key];\r\n            }\r\n        });\r\n    },\r\n    getGoogleAnalyticsName: (userCacheName) => {\r\n        return userCacheName || _createCacheName(_cacheNameDetails.googleAnalytics);\r\n    },\r\n    getPrecacheName: (userCacheName) => {\r\n        return userCacheName || _createCacheName(_cacheNameDetails.precache);\r\n    },\r\n    getPrefix: () => {\r\n        return _cacheNameDetails.prefix;\r\n    },\r\n    getRuntimeName: (userCacheName) => {\r\n        return userCacheName || _createCacheName(_cacheNameDetails.runtime);\r\n    },\r\n    getSuffix: () => {\r\n        return _cacheNameDetails.suffix;\r\n    },\r\n};\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\nconst getFriendlyURL = (url) => {\r\n    const urlObj = new URL(String(url), location.href);\r\n    // See https://github.com/GoogleChrome/workbox/issues/2323\r\n    // We want to include everything, except for the origin if it's same-origin.\r\n    return urlObj.href.replace(new RegExp(`^${location.origin}`), '');\r\n};\r\nexport { getFriendlyURL };\r\n","/*\r\n  Copyright 2019 Google LLC\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\nconst logger = (process.env.NODE_ENV === 'production' ? null : (() => {\r\n    // Don't overwrite this value if it's already set.\r\n    // See https://github.com/GoogleChrome/workbox/pull/2284#issuecomment-560470923\r\n    if (!('__WB_DISABLE_DEV_LOGS' in self)) {\r\n        self.__WB_DISABLE_DEV_LOGS = false;\r\n    }\r\n    let inGroup = false;\r\n    const methodToColorMap = {\r\n        debug: `#7f8c8d`,\r\n        log: `#2ecc71`,\r\n        warn: `#f39c12`,\r\n        error: `#c0392b`,\r\n        groupCollapsed: `#3498db`,\r\n        groupEnd: null,\r\n    };\r\n    const print = function (method, args) {\r\n        if (self.__WB_DISABLE_DEV_LOGS) {\r\n            return;\r\n        }\r\n        if (method === 'groupCollapsed') {\r\n            // Safari doesn't print all console.groupCollapsed() arguments:\r\n            // https://bugs.webkit.org/show_bug.cgi?id=182754\r\n            if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\r\n                console[method](...args);\r\n                return;\r\n            }\r\n        }\r\n        const styles = [\r\n            `background: ${methodToColorMap[method]}`,\r\n            `border-radius: 0.5em`,\r\n            `color: white`,\r\n            `font-weight: bold`,\r\n            `padding: 2px 0.5em`,\r\n        ];\r\n        // When in a group, the workbox prefix is not displayed.\r\n        const logPrefix = inGroup ? [] : ['%cworkbox', styles.join(';')];\r\n        console[method](...logPrefix, ...args);\r\n        if (method === 'groupCollapsed') {\r\n            inGroup = true;\r\n        }\r\n        if (method === 'groupEnd') {\r\n            inGroup = false;\r\n        }\r\n    };\r\n    const api = {};\r\n    const loggerMethods = Object.keys(methodToColorMap);\r\n    for (const key of loggerMethods) {\r\n        const method = key;\r\n        api[method] = (...args) => {\r\n            print(method, args);\r\n        };\r\n    }\r\n    return api;\r\n})());\r\nexport { logger };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../../_version.js';\r\nexport const messages = {\r\n    'invalid-value': ({ paramName, validValueDescription, value }) => {\r\n        if (!paramName || !validValueDescription) {\r\n            throw new Error(`Unexpected input to 'invalid-value' error.`);\r\n        }\r\n        return `The '${paramName}' parameter was given a value with an ` +\r\n            `unexpected value. ${validValueDescription} Received a value of ` +\r\n            `${JSON.stringify(value)}.`;\r\n    },\r\n    'not-in-sw': ({ moduleName }) => {\r\n        if (!moduleName) {\r\n            throw new Error(`Unexpected input to 'not-in-sw' error.`);\r\n        }\r\n        return `The '${moduleName}' must be used in a service worker.`;\r\n    },\r\n    'not-an-array': ({ moduleName, className, funcName, paramName }) => {\r\n        if (!moduleName || !className || !funcName || !paramName) {\r\n            throw new Error(`Unexpected input to 'not-an-array' error.`);\r\n        }\r\n        return `The parameter '${paramName}' passed into ` +\r\n            `'${moduleName}.${className}.${funcName}()' must be an array.`;\r\n    },\r\n    'incorrect-type': ({ expectedType, paramName, moduleName, className, funcName }) => {\r\n        if (!expectedType || !paramName || !moduleName || !funcName) {\r\n            throw new Error(`Unexpected input to 'incorrect-type' error.`);\r\n        }\r\n        return `The parameter '${paramName}' passed into ` +\r\n            `'${moduleName}.${className ? (className + '.') : ''}` +\r\n            `${funcName}()' must be of type ${expectedType}.`;\r\n    },\r\n    'incorrect-class': ({ expectedClass, paramName, moduleName, className, funcName, isReturnValueProblem }) => {\r\n        if (!expectedClass || !moduleName || !funcName) {\r\n            throw new Error(`Unexpected input to 'incorrect-class' error.`);\r\n        }\r\n        if (isReturnValueProblem) {\r\n            return `The return value from ` +\r\n                `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\r\n                `must be an instance of class ${expectedClass.name}.`;\r\n        }\r\n        return `The parameter '${paramName}' passed into ` +\r\n            `'${moduleName}.${className ? (className + '.') : ''}${funcName}()' ` +\r\n            `must be an instance of class ${expectedClass.name}.`;\r\n    },\r\n    'missing-a-method': ({ expectedMethod, paramName, moduleName, className, funcName }) => {\r\n        if (!expectedMethod || !paramName || !moduleName || !className\r\n            || !funcName) {\r\n            throw new Error(`Unexpected input to 'missing-a-method' error.`);\r\n        }\r\n        return `${moduleName}.${className}.${funcName}() expected the ` +\r\n            `'${paramName}' parameter to expose a '${expectedMethod}' method.`;\r\n    },\r\n    'add-to-cache-list-unexpected-type': ({ entry }) => {\r\n        return `An unexpected entry was passed to ` +\r\n            `'workbox-precaching.PrecacheController.addToCacheList()' The entry ` +\r\n            `'${JSON.stringify(entry)}' isn't supported. You must supply an array of ` +\r\n            `strings with one or more characters, objects with a url property or ` +\r\n            `Request objects.`;\r\n    },\r\n    'add-to-cache-list-conflicting-entries': ({ firstEntry, secondEntry }) => {\r\n        if (!firstEntry || !secondEntry) {\r\n            throw new Error(`Unexpected input to ` +\r\n                `'add-to-cache-list-duplicate-entries' error.`);\r\n        }\r\n        return `Two of the entries passed to ` +\r\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\r\n            `${firstEntry._entryId} but different revision details. Workbox is ` +\r\n            `is unable to cache and version the asset correctly. Please remove one ` +\r\n            `of the entries.`;\r\n    },\r\n    'plugin-error-request-will-fetch': ({ thrownError }) => {\r\n        if (!thrownError) {\r\n            throw new Error(`Unexpected input to ` +\r\n                `'plugin-error-request-will-fetch', error.`);\r\n        }\r\n        return `An error was thrown by a plugins 'requestWillFetch()' method. ` +\r\n            `The thrown error message was: '${thrownError.message}'.`;\r\n    },\r\n    'invalid-cache-name': ({ cacheNameId, value }) => {\r\n        if (!cacheNameId) {\r\n            throw new Error(`Expected a 'cacheNameId' for error 'invalid-cache-name'`);\r\n        }\r\n        return `You must provide a name containing at least one character for ` +\r\n            `setCacheDetails({${cacheNameId}: '...'}). Received a value of ` +\r\n            `'${JSON.stringify(value)}'`;\r\n    },\r\n    'unregister-route-but-not-found-with-method': ({ method }) => {\r\n        if (!method) {\r\n            throw new Error(`Unexpected input to ` +\r\n                `'unregister-route-but-not-found-with-method' error.`);\r\n        }\r\n        return `The route you're trying to unregister was not  previously ` +\r\n            `registered for the method type '${method}'.`;\r\n    },\r\n    'unregister-route-route-not-registered': () => {\r\n        return `The route you're trying to unregister was not previously ` +\r\n            `registered.`;\r\n    },\r\n    'queue-replay-failed': ({ name }) => {\r\n        return `Replaying the background sync queue '${name}' failed.`;\r\n    },\r\n    'duplicate-queue-name': ({ name }) => {\r\n        return `The Queue name '${name}' is already being used. ` +\r\n            `All instances of backgroundSync.Queue must be given unique names.`;\r\n    },\r\n    'expired-test-without-max-age': ({ methodName, paramName }) => {\r\n        return `The '${methodName}()' method can only be used when the ` +\r\n            `'${paramName}' is used in the constructor.`;\r\n    },\r\n    'unsupported-route-type': ({ moduleName, className, funcName, paramName }) => {\r\n        return `The supplied '${paramName}' parameter was an unsupported type. ` +\r\n            `Please check the docs for ${moduleName}.${className}.${funcName} for ` +\r\n            `valid input types.`;\r\n    },\r\n    'not-array-of-class': ({ value, expectedClass, moduleName, className, funcName, paramName }) => {\r\n        return `The supplied '${paramName}' parameter must be an array of ` +\r\n            `'${expectedClass}' objects. Received '${JSON.stringify(value)},'. ` +\r\n            `Please check the call to ${moduleName}.${className}.${funcName}() ` +\r\n            `to fix the issue.`;\r\n    },\r\n    'max-entries-or-age-required': ({ moduleName, className, funcName }) => {\r\n        return `You must define either config.maxEntries or config.maxAgeSeconds` +\r\n            `in ${moduleName}.${className}.${funcName}`;\r\n    },\r\n    'statuses-or-headers-required': ({ moduleName, className, funcName }) => {\r\n        return `You must define either config.statuses or config.headers` +\r\n            `in ${moduleName}.${className}.${funcName}`;\r\n    },\r\n    'invalid-string': ({ moduleName, funcName, paramName }) => {\r\n        if (!paramName || !moduleName || !funcName) {\r\n            throw new Error(`Unexpected input to 'invalid-string' error.`);\r\n        }\r\n        return `When using strings, the '${paramName}' parameter must start with ` +\r\n            `'http' (for cross-origin matches) or '/' (for same-origin matches). ` +\r\n            `Please see the docs for ${moduleName}.${funcName}() for ` +\r\n            `more info.`;\r\n    },\r\n    'channel-name-required': () => {\r\n        return `You must provide a channelName to construct a ` +\r\n            `BroadcastCacheUpdate instance.`;\r\n    },\r\n    'invalid-responses-are-same-args': () => {\r\n        return `The arguments passed into responsesAreSame() appear to be ` +\r\n            `invalid. Please ensure valid Responses are used.`;\r\n    },\r\n    'expire-custom-caches-only': () => {\r\n        return `You must provide a 'cacheName' property when using the ` +\r\n            `expiration plugin with a runtime caching strategy.`;\r\n    },\r\n    'unit-must-be-bytes': ({ normalizedRangeHeader }) => {\r\n        if (!normalizedRangeHeader) {\r\n            throw new Error(`Unexpected input to 'unit-must-be-bytes' error.`);\r\n        }\r\n        return `The 'unit' portion of the Range header must be set to 'bytes'. ` +\r\n            `The Range header provided was \"${normalizedRangeHeader}\"`;\r\n    },\r\n    'single-range-only': ({ normalizedRangeHeader }) => {\r\n        if (!normalizedRangeHeader) {\r\n            throw new Error(`Unexpected input to 'single-range-only' error.`);\r\n        }\r\n        return `Multiple ranges are not supported. Please use a  single start ` +\r\n            `value, and optional end value. The Range header provided was ` +\r\n            `\"${normalizedRangeHeader}\"`;\r\n    },\r\n    'invalid-range-values': ({ normalizedRangeHeader }) => {\r\n        if (!normalizedRangeHeader) {\r\n            throw new Error(`Unexpected input to 'invalid-range-values' error.`);\r\n        }\r\n        return `The Range header is missing both start and end values. At least ` +\r\n            `one of those values is needed. The Range header provided was ` +\r\n            `\"${normalizedRangeHeader}\"`;\r\n    },\r\n    'no-range-header': () => {\r\n        return `No Range header was found in the Request provided.`;\r\n    },\r\n    'range-not-satisfiable': ({ size, start, end }) => {\r\n        return `The start (${start}) and end (${end}) values in the Range are ` +\r\n            `not satisfiable by the cached response, which is ${size} bytes.`;\r\n    },\r\n    'attempt-to-cache-non-get-request': ({ url, method }) => {\r\n        return `Unable to cache '${url}' because it is a '${method}' request and ` +\r\n            `only 'GET' requests can be cached.`;\r\n    },\r\n    'cache-put-with-no-response': ({ url }) => {\r\n        return `There was an attempt to cache '${url}' but the response was not ` +\r\n            `defined.`;\r\n    },\r\n    'no-response': ({ url, error }) => {\r\n        let message = `The strategy could not generate a response for '${url}'.`;\r\n        if (error) {\r\n            message += ` The underlying error is ${error}.`;\r\n        }\r\n        return message;\r\n    },\r\n    'bad-precaching-response': ({ url, status }) => {\r\n        return `The precaching request for '${url}' failed with an HTTP ` +\r\n            `status of ${status}.`;\r\n    },\r\n    'non-precached-url': ({ url }) => {\r\n        return `createHandlerBoundToURL('${url}') was called, but that URL is ` +\r\n            `not precached. Please pass in a URL that is precached instead.`;\r\n    },\r\n    'add-to-cache-list-conflicting-integrities': ({ url }) => {\r\n        return `Two of the entries passed to ` +\r\n            `'workbox-precaching.PrecacheController.addToCacheList()' had the URL ` +\r\n            `${url} with different integrity values. Please remove one of them.`;\r\n    },\r\n    'missing-precache-entry': ({ cacheName, url }) => {\r\n        return `Unable to find a precached response in ${cacheName} for ${url}.`;\r\n    },\r\n};\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { messages } from './messages.js';\r\nimport '../../_version.js';\r\nconst fallback = (code, ...args) => {\r\n    let msg = code;\r\n    if (args.length > 0) {\r\n        msg += ` :: ${JSON.stringify(args)}`;\r\n    }\r\n    return msg;\r\n};\r\nconst generatorFunction = (code, details = {}) => {\r\n    const message = messages[code];\r\n    if (!message) {\r\n        throw new Error(`Unable to find message for code '${code}'.`);\r\n    }\r\n    return message(details);\r\n};\r\nexport const messageGenerator = (process.env.NODE_ENV === 'production') ?\r\n    fallback : generatorFunction;\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { messageGenerator } from '../models/messages/messageGenerator.js';\r\nimport '../_version.js';\r\n/**\r\n * Workbox errors should be thrown with this class.\r\n * This allows use to ensure the type easily in tests,\r\n * helps developers identify errors from workbox\r\n * easily and allows use to optimise error\r\n * messages correctly.\r\n *\r\n * @private\r\n */\r\nclass WorkboxError extends Error {\r\n    /**\r\n     *\r\n     * @param {string} errorCode The error code that\r\n     * identifies this particular error.\r\n     * @param {Object=} details Any relevant arguments\r\n     * that will help developers identify issues should\r\n     * be added as a key on the context object.\r\n     */\r\n    constructor(errorCode, details) {\r\n        const message = messageGenerator(errorCode, details);\r\n        super(message);\r\n        this.name = errorCode;\r\n        this.details = details;\r\n    }\r\n}\r\nexport { WorkboxError };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { WorkboxError } from '../_private/WorkboxError.js';\r\nimport '../_version.js';\r\n/*\r\n * This method returns true if the current context is a service worker.\r\n */\r\nconst isSWEnv = (moduleName) => {\r\n    if (!('ServiceWorkerGlobalScope' in self)) {\r\n        throw new WorkboxError('not-in-sw', { moduleName });\r\n    }\r\n};\r\n/*\r\n * This method throws if the supplied value is not an array.\r\n * The destructed values are required to produce a meaningful error for users.\r\n * The destructed and restructured object is so it's clear what is\r\n * needed.\r\n */\r\nconst isArray = (value, details) => {\r\n    if (!Array.isArray(value)) {\r\n        throw new WorkboxError('not-an-array', details);\r\n    }\r\n};\r\nconst hasMethod = (object, expectedMethod, details) => {\r\n    const type = typeof object[expectedMethod];\r\n    if (type !== 'function') {\r\n        details['expectedMethod'] = expectedMethod;\r\n        throw new WorkboxError('missing-a-method', details);\r\n    }\r\n};\r\nconst isType = (object, expectedType, details) => {\r\n    if (typeof object !== expectedType) {\r\n        details['expectedType'] = expectedType;\r\n        throw new WorkboxError('incorrect-type', details);\r\n    }\r\n};\r\nconst isInstance = (object, expectedClass, details) => {\r\n    if (!(object instanceof expectedClass)) {\r\n        details['expectedClass'] = expectedClass;\r\n        throw new WorkboxError('incorrect-class', details);\r\n    }\r\n};\r\nconst isOneOf = (value, validValues, details) => {\r\n    if (!validValues.includes(value)) {\r\n        details['validValueDescription'] =\r\n            `Valid values are ${JSON.stringify(validValues)}.`;\r\n        throw new WorkboxError('invalid-value', details);\r\n    }\r\n};\r\nconst isArrayOfClass = (value, expectedClass, details) => {\r\n    const error = new WorkboxError('not-array-of-class', details);\r\n    if (!Array.isArray(value)) {\r\n        throw error;\r\n    }\r\n    for (const item of value) {\r\n        if (!(item instanceof expectedClass)) {\r\n            throw error;\r\n        }\r\n    }\r\n};\r\nconst finalAssertExports = process.env.NODE_ENV === 'production' ? null : {\r\n    hasMethod,\r\n    isArray,\r\n    isInstance,\r\n    isOneOf,\r\n    isSWEnv,\r\n    isType,\r\n    isArrayOfClass,\r\n};\r\nexport { finalAssertExports as assert };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\n// Callbacks to be executed whenever there's a quota error.\r\nconst quotaErrorCallbacks = new Set();\r\nexport { quotaErrorCallbacks };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { logger } from '../_private/logger.js';\r\nimport { quotaErrorCallbacks } from '../models/quotaErrorCallbacks.js';\r\nimport '../_version.js';\r\n/**\r\n * Runs all of the callback functions, one at a time sequentially, in the order\r\n * in which they were registered.\r\n *\r\n * @memberof module:workbox-core\r\n * @private\r\n */\r\nasync function executeQuotaErrorCallbacks() {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        logger.log(`About to run ${quotaErrorCallbacks.size} ` +\r\n            `callbacks to clean up caches.`);\r\n    }\r\n    for (const callback of quotaErrorCallbacks) {\r\n        await callback();\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            logger.log(callback, 'is complete.');\r\n        }\r\n    }\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        logger.log('Finished running callbacks.');\r\n    }\r\n}\r\nexport { executeQuotaErrorCallbacks };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\nexport const pluginUtils = {\r\n    filter: (plugins, callbackName) => {\r\n        return plugins.filter((plugin) => callbackName in plugin);\r\n    },\r\n};\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { assert } from './assert.js';\r\nimport { executeQuotaErrorCallbacks } from './executeQuotaErrorCallbacks.js';\r\nimport { getFriendlyURL } from './getFriendlyURL.js';\r\nimport { logger } from './logger.js';\r\nimport { pluginUtils } from '../utils/pluginUtils.js';\r\nimport { WorkboxError } from './WorkboxError.js';\r\nimport '../_version.js';\r\n/**\r\n * Checks the list of plugins for the cacheKeyWillBeUsed callback, and\r\n * executes any of those callbacks found in sequence. The final `Request` object\r\n * returned by the last plugin is treated as the cache key for cache reads\r\n * and/or writes.\r\n *\r\n * @param {Object} options\r\n * @param {Request} options.request\r\n * @param {string} options.mode\r\n * @param {Array<Object>} [options.plugins=[]]\r\n * @return {Promise<Request>}\r\n *\r\n * @private\r\n * @memberof module:workbox-core\r\n */\r\nconst _getEffectiveRequest = async ({ request, mode, plugins = [], }) => {\r\n    const cacheKeyWillBeUsedPlugins = pluginUtils.filter(plugins, \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */);\r\n    let effectiveRequest = request;\r\n    for (const plugin of cacheKeyWillBeUsedPlugins) {\r\n        effectiveRequest = await plugin[\"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */].call(plugin, { mode, request: effectiveRequest });\r\n        if (typeof effectiveRequest === 'string') {\r\n            effectiveRequest = new Request(effectiveRequest);\r\n        }\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            assert.isInstance(effectiveRequest, Request, {\r\n                moduleName: 'Plugin',\r\n                funcName: \"cacheKeyWillBeUsed\" /* CACHE_KEY_WILL_BE_USED */,\r\n                isReturnValueProblem: true,\r\n            });\r\n        }\r\n    }\r\n    return effectiveRequest;\r\n};\r\n/**\r\n * This method will call cacheWillUpdate on the available plugins (or use\r\n * status === 200) to determine if the Response is safe and valid to cache.\r\n *\r\n * @param {Object} options\r\n * @param {Request} options.request\r\n * @param {Response} options.response\r\n * @param {Event} [options.event]\r\n * @param {Array<Object>} [options.plugins=[]]\r\n * @return {Promise<Response>}\r\n *\r\n * @private\r\n * @memberof module:workbox-core\r\n */\r\nconst _isResponseSafeToCache = async ({ request, response, event, plugins = [], }) => {\r\n    let responseToCache = response;\r\n    let pluginsUsed = false;\r\n    for (const plugin of plugins) {\r\n        if (\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */ in plugin) {\r\n            pluginsUsed = true;\r\n            const pluginMethod = plugin[\"cacheWillUpdate\" /* CACHE_WILL_UPDATE */];\r\n            responseToCache = await pluginMethod.call(plugin, {\r\n                request,\r\n                response: responseToCache,\r\n                event,\r\n            });\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                if (responseToCache) {\r\n                    assert.isInstance(responseToCache, Response, {\r\n                        moduleName: 'Plugin',\r\n                        funcName: \"cacheWillUpdate\" /* CACHE_WILL_UPDATE */,\r\n                        isReturnValueProblem: true,\r\n                    });\r\n                }\r\n            }\r\n            if (!responseToCache) {\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    if (!pluginsUsed) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            if (responseToCache) {\r\n                if (responseToCache.status !== 200) {\r\n                    if (responseToCache.status === 0) {\r\n                        logger.warn(`The response for '${request.url}' is an opaque ` +\r\n                            `response. The caching strategy that you're using will not ` +\r\n                            `cache opaque responses by default.`);\r\n                    }\r\n                    else {\r\n                        logger.debug(`The response for '${request.url}' returned ` +\r\n                            `a status code of '${response.status}' and won't be cached as a ` +\r\n                            `result.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        responseToCache = responseToCache && responseToCache.status === 200 ?\r\n            responseToCache : undefined;\r\n    }\r\n    return responseToCache ? responseToCache : null;\r\n};\r\n/**\r\n * This is a wrapper around cache.match().\r\n *\r\n * @param {Object} options\r\n * @param {string} options.cacheName Name of the cache to match against.\r\n * @param {Request} options.request The Request that will be used to look up\r\n *     cache entries.\r\n * @param {Event} [options.event] The event that prompted the action.\r\n * @param {Object} [options.matchOptions] Options passed to cache.match().\r\n * @param {Array<Object>} [options.plugins=[]] Array of plugins.\r\n * @return {Response} A cached response if available.\r\n *\r\n * @private\r\n * @memberof module:workbox-core\r\n */\r\nconst matchWrapper = async ({ cacheName, request, event, matchOptions, plugins = [], }) => {\r\n    const cache = await self.caches.open(cacheName);\r\n    const effectiveRequest = await _getEffectiveRequest({\r\n        plugins, request, mode: 'read'\r\n    });\r\n    let cachedResponse = await cache.match(effectiveRequest, matchOptions);\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        if (cachedResponse) {\r\n            logger.debug(`Found a cached response in '${cacheName}'.`);\r\n        }\r\n        else {\r\n            logger.debug(`No cached response found in '${cacheName}'.`);\r\n        }\r\n    }\r\n    for (const plugin of plugins) {\r\n        if (\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */ in plugin) {\r\n            const pluginMethod = plugin[\"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */];\r\n            cachedResponse = await pluginMethod.call(plugin, {\r\n                cacheName,\r\n                event,\r\n                matchOptions,\r\n                cachedResponse,\r\n                request: effectiveRequest,\r\n            });\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                if (cachedResponse) {\r\n                    assert.isInstance(cachedResponse, Response, {\r\n                        moduleName: 'Plugin',\r\n                        funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\r\n                        isReturnValueProblem: true,\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return cachedResponse;\r\n};\r\n/**\r\n * Wrapper around cache.put().\r\n *\r\n * Will call `cacheDidUpdate` on plugins if the cache was updated, using\r\n * `matchOptions` when determining what the old entry is.\r\n *\r\n * @param {Object} options\r\n * @param {string} options.cacheName\r\n * @param {Request} options.request\r\n * @param {Response} options.response\r\n * @param {Event} [options.event]\r\n * @param {Array<Object>} [options.plugins=[]]\r\n * @param {Object} [options.matchOptions]\r\n *\r\n * @private\r\n * @memberof module:workbox-core\r\n */\r\nconst putWrapper = async ({ cacheName, request, response, event, plugins = [], matchOptions, }) => {\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        if (request.method && request.method !== 'GET') {\r\n            throw new WorkboxError('attempt-to-cache-non-get-request', {\r\n                url: getFriendlyURL(request.url),\r\n                method: request.method,\r\n            });\r\n        }\r\n    }\r\n    const effectiveRequest = await _getEffectiveRequest({\r\n        plugins, request, mode: 'write'\r\n    });\r\n    if (!response) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            logger.error(`Cannot cache non-existent response for ` +\r\n                `'${getFriendlyURL(effectiveRequest.url)}'.`);\r\n        }\r\n        throw new WorkboxError('cache-put-with-no-response', {\r\n            url: getFriendlyURL(effectiveRequest.url),\r\n        });\r\n    }\r\n    const responseToCache = await _isResponseSafeToCache({\r\n        event,\r\n        plugins,\r\n        response,\r\n        request: effectiveRequest,\r\n    });\r\n    if (!responseToCache) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            logger.debug(`Response '${getFriendlyURL(effectiveRequest.url)}' will ` +\r\n                `not be cached.`, responseToCache);\r\n        }\r\n        return;\r\n    }\r\n    const cache = await self.caches.open(cacheName);\r\n    const updatePlugins = pluginUtils.filter(plugins, \"cacheDidUpdate\" /* CACHE_DID_UPDATE */);\r\n    const oldResponse = updatePlugins.length > 0 ?\r\n        await matchWrapper({ cacheName, matchOptions, request: effectiveRequest }) :\r\n        null;\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        logger.debug(`Updating the '${cacheName}' cache with a new Response for ` +\r\n            `${getFriendlyURL(effectiveRequest.url)}.`);\r\n    }\r\n    try {\r\n        await cache.put(effectiveRequest, responseToCache);\r\n    }\r\n    catch (error) {\r\n        // See https://developer.mozilla.org/en-US/docs/Web/API/DOMException#exception-QuotaExceededError\r\n        if (error.name === 'QuotaExceededError') {\r\n            await executeQuotaErrorCallbacks();\r\n        }\r\n        throw error;\r\n    }\r\n    for (const plugin of updatePlugins) {\r\n        await plugin[\"cacheDidUpdate\" /* CACHE_DID_UPDATE */].call(plugin, {\r\n            cacheName,\r\n            event,\r\n            oldResponse,\r\n            newResponse: responseToCache,\r\n            request: effectiveRequest,\r\n        });\r\n    }\r\n};\r\nexport const cacheWrapper = {\r\n    put: putWrapper,\r\n    match: matchWrapper,\r\n};\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { WorkboxError } from './WorkboxError.js';\r\nimport { logger } from './logger.js';\r\nimport { assert } from './assert.js';\r\nimport { getFriendlyURL } from '../_private/getFriendlyURL.js';\r\nimport { pluginUtils } from '../utils/pluginUtils.js';\r\nimport '../_version.js';\r\n/**\r\n * Wrapper around the fetch API.\r\n *\r\n * Will call requestWillFetch on available plugins.\r\n *\r\n * @param {Object} options\r\n * @param {Request|string} options.request\r\n * @param {Object} [options.fetchOptions]\r\n * @param {ExtendableEvent} [options.event]\r\n * @param {Array<Object>} [options.plugins=[]]\r\n * @return {Promise<Response>}\r\n *\r\n * @private\r\n * @memberof module:workbox-core\r\n */\r\nconst wrappedFetch = async ({ request, fetchOptions, event, plugins = [], }) => {\r\n    if (typeof request === 'string') {\r\n        request = new Request(request);\r\n    }\r\n    // We *should* be able to call `await event.preloadResponse` even if it's\r\n    // undefined, but for some reason, doing so leads to errors in our Node unit\r\n    // tests. To work around that, explicitly check preloadResponse's value first.\r\n    if (event instanceof FetchEvent && event.preloadResponse) {\r\n        const possiblePreloadResponse = await event.preloadResponse;\r\n        if (possiblePreloadResponse) {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                logger.log(`Using a preloaded navigation response for ` +\r\n                    `'${getFriendlyURL(request.url)}'`);\r\n            }\r\n            return possiblePreloadResponse;\r\n        }\r\n    }\r\n    if (process.env.NODE_ENV !== 'production') {\r\n        assert.isInstance(request, Request, {\r\n            paramName: 'request',\r\n            expectedClass: Request,\r\n            moduleName: 'workbox-core',\r\n            className: 'fetchWrapper',\r\n            funcName: 'wrappedFetch',\r\n        });\r\n    }\r\n    const failedFetchPlugins = pluginUtils.filter(plugins, \"fetchDidFail\" /* FETCH_DID_FAIL */);\r\n    // If there is a fetchDidFail plugin, we need to save a clone of the\r\n    // original request before it's either modified by a requestWillFetch\r\n    // plugin or before the original request's body is consumed via fetch().\r\n    const originalRequest = failedFetchPlugins.length > 0 ?\r\n        request.clone() : null;\r\n    try {\r\n        for (const plugin of plugins) {\r\n            if (\"requestWillFetch\" /* REQUEST_WILL_FETCH */ in plugin) {\r\n                const pluginMethod = plugin[\"requestWillFetch\" /* REQUEST_WILL_FETCH */];\r\n                const requestClone = request.clone();\r\n                request = await pluginMethod.call(plugin, {\r\n                    request: requestClone,\r\n                    event,\r\n                });\r\n                if (process.env.NODE_ENV !== 'production') {\r\n                    if (request) {\r\n                        assert.isInstance(request, Request, {\r\n                            moduleName: 'Plugin',\r\n                            funcName: \"cachedResponseWillBeUsed\" /* CACHED_RESPONSE_WILL_BE_USED */,\r\n                            isReturnValueProblem: true,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    catch (err) {\r\n        throw new WorkboxError('plugin-error-request-will-fetch', {\r\n            thrownError: err,\r\n        });\r\n    }\r\n    // The request can be altered by plugins with `requestWillFetch` making\r\n    // the original request (Most likely from a `fetch` event) to be different\r\n    // to the Request we make. Pass both to `fetchDidFail` to aid debugging.\r\n    const pluginFilteredRequest = request.clone();\r\n    try {\r\n        let fetchResponse;\r\n        // See https://github.com/GoogleChrome/workbox/issues/1796\r\n        if (request.mode === 'navigate') {\r\n            fetchResponse = await fetch(request);\r\n        }\r\n        else {\r\n            fetchResponse = await fetch(request, fetchOptions);\r\n        }\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            logger.debug(`Network request for ` +\r\n                `'${getFriendlyURL(request.url)}' returned a response with ` +\r\n                `status '${fetchResponse.status}'.`);\r\n        }\r\n        for (const plugin of plugins) {\r\n            if (\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */ in plugin) {\r\n                fetchResponse = await plugin[\"fetchDidSucceed\" /* FETCH_DID_SUCCEED */]\r\n                    .call(plugin, {\r\n                    event,\r\n                    request: pluginFilteredRequest,\r\n                    response: fetchResponse,\r\n                });\r\n                if (process.env.NODE_ENV !== 'production') {\r\n                    if (fetchResponse) {\r\n                        assert.isInstance(fetchResponse, Response, {\r\n                            moduleName: 'Plugin',\r\n                            funcName: \"fetchDidSucceed\" /* FETCH_DID_SUCCEED */,\r\n                            isReturnValueProblem: true,\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return fetchResponse;\r\n    }\r\n    catch (error) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            logger.error(`Network request for ` +\r\n                `'${getFriendlyURL(request.url)}' threw an error.`, error);\r\n        }\r\n        for (const plugin of failedFetchPlugins) {\r\n            await plugin[\"fetchDidFail\" /* FETCH_DID_FAIL */].call(plugin, {\r\n                error,\r\n                event,\r\n                originalRequest: originalRequest.clone(),\r\n                request: pluginFilteredRequest.clone(),\r\n            });\r\n        }\r\n        throw error;\r\n    }\r\n};\r\nconst fetchWrapper = {\r\n    fetch: wrappedFetch,\r\n};\r\nexport { fetchWrapper };\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\nlet supportStatus;\r\n/**\r\n * A utility function that determines whether the current browser supports\r\n * constructing a new `Response` from a `response.body` stream.\r\n *\r\n * @return {boolean} `true`, if the current browser can successfully\r\n *     construct a `Response` from a `response.body` stream, `false` otherwise.\r\n *\r\n * @private\r\n */\r\nfunction canConstructResponseFromBodyStream() {\r\n    if (supportStatus === undefined) {\r\n        const testResponse = new Response('');\r\n        if ('body' in testResponse) {\r\n            try {\r\n                new Response(testResponse.body);\r\n                supportStatus = true;\r\n            }\r\n            catch (error) {\r\n                supportStatus = false;\r\n            }\r\n        }\r\n        supportStatus = false;\r\n    }\r\n    return supportStatus;\r\n}\r\nexport { canConstructResponseFromBodyStream };\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { canConstructResponseFromBodyStream } from './_private/canConstructResponseFromBodyStream.js';\r\nimport './_version.js';\r\n/**\r\n * Allows developers to copy a response and modify its `headers`, `status`,\r\n * or `statusText` values (the values settable via a\r\n * [`ResponseInit`]{@link https://developer.mozilla.org/en-US/docs/Web/API/Response/Response#Syntax}\r\n * object in the constructor).\r\n * To modify these values, pass a function as the second argument. That\r\n * function will be invoked with a single object with the response properties\r\n * `{headers, status, statusText}`. The return value of this function will\r\n * be used as the `ResponseInit` for the new `Response`. To change the values\r\n * either modify the passed parameter(s) and return it, or return a totally\r\n * new object.\r\n *\r\n * @param {Response} response\r\n * @param {Function} modifier\r\n * @memberof module:workbox-core\r\n */\r\nasync function copyResponse(response, modifier) {\r\n    const clonedResponse = response.clone();\r\n    // Create a fresh `ResponseInit` object by cloning the headers.\r\n    const responseInit = {\r\n        headers: new Headers(clonedResponse.headers),\r\n        status: clonedResponse.status,\r\n        statusText: clonedResponse.statusText,\r\n    };\r\n    // Apply any user modifications.\r\n    const modifiedResponseInit = modifier ? modifier(responseInit) : responseInit;\r\n    // Create the new response from the body stream and `ResponseInit`\r\n    // modifications. Note: not all browsers support the Response.body stream,\r\n    // so fall back to reading the entire body into memory as a blob.\r\n    const body = canConstructResponseFromBodyStream() ?\r\n        clonedResponse.body : await clonedResponse.blob();\r\n    return new Response(body, modifiedResponseInit);\r\n}\r\nexport { copyResponse };\r\n","\"use strict\";\r\n// @ts-ignore\r\ntry {\r\n    self['workbox:precaching:5.1.2'] && _();\r\n}\r\ncatch (e) { }\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\r\nimport '../_version.js';\r\n// Name of the search parameter used to store revision info.\r\nconst REVISION_SEARCH_PARAM = '__WB_REVISION__';\r\n/**\r\n * Converts a manifest entry into a versioned URL suitable for precaching.\r\n *\r\n * @param {Object|string} entry\r\n * @return {string} A URL with versioning info.\r\n *\r\n * @private\r\n * @memberof module:workbox-precaching\r\n */\r\nexport function createCacheKey(entry) {\r\n    if (!entry) {\r\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\r\n    }\r\n    // If a precache manifest entry is a string, it's assumed to be a versioned\r\n    // URL, like '/app.abcd1234.js'. Return as-is.\r\n    if (typeof entry === 'string') {\r\n        const urlObject = new URL(entry, location.href);\r\n        return {\r\n            cacheKey: urlObject.href,\r\n            url: urlObject.href,\r\n        };\r\n    }\r\n    const { revision, url } = entry;\r\n    if (!url) {\r\n        throw new WorkboxError('add-to-cache-list-unexpected-type', { entry });\r\n    }\r\n    // If there's just a URL and no revision, then it's also assumed to be a\r\n    // versioned URL.\r\n    if (!revision) {\r\n        const urlObject = new URL(url, location.href);\r\n        return {\r\n            cacheKey: urlObject.href,\r\n            url: urlObject.href,\r\n        };\r\n    }\r\n    // Otherwise, construct a properly versioned URL using the custom Workbox\r\n    // search parameter along with the revision info.\r\n    const cacheKeyURL = new URL(url, location.href);\r\n    const originalURL = new URL(url, location.href);\r\n    cacheKeyURL.searchParams.set(REVISION_SEARCH_PARAM, revision);\r\n    return {\r\n        cacheKey: cacheKeyURL.href,\r\n        url: originalURL.href,\r\n    };\r\n}\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport '../_version.js';\r\n/**\r\n * @param {string} groupTitle\r\n * @param {Array<string>} deletedURLs\r\n *\r\n * @private\r\n */\r\nconst logGroup = (groupTitle, deletedURLs) => {\r\n    logger.groupCollapsed(groupTitle);\r\n    for (const url of deletedURLs) {\r\n        logger.log(url);\r\n    }\r\n    logger.groupEnd();\r\n};\r\n/**\r\n * @param {Array<string>} deletedURLs\r\n *\r\n * @private\r\n * @memberof module:workbox-precaching\r\n */\r\nexport function printCleanupDetails(deletedURLs) {\r\n    const deletionCount = deletedURLs.length;\r\n    if (deletionCount > 0) {\r\n        logger.groupCollapsed(`During precaching cleanup, ` +\r\n            `${deletionCount} cached ` +\r\n            `request${deletionCount === 1 ? ' was' : 's were'} deleted.`);\r\n        logGroup('Deleted Cache Requests', deletedURLs);\r\n        logger.groupEnd();\r\n    }\r\n}\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport '../_version.js';\r\n/**\r\n * @param {string} groupTitle\r\n * @param {Array<string>} urls\r\n *\r\n * @private\r\n */\r\nfunction _nestedGroup(groupTitle, urls) {\r\n    if (urls.length === 0) {\r\n        return;\r\n    }\r\n    logger.groupCollapsed(groupTitle);\r\n    for (const url of urls) {\r\n        logger.log(url);\r\n    }\r\n    logger.groupEnd();\r\n}\r\n/**\r\n * @param {Array<string>} urlsToPrecache\r\n * @param {Array<string>} urlsAlreadyPrecached\r\n *\r\n * @private\r\n * @memberof module:workbox-precaching\r\n */\r\nexport function printInstallDetails(urlsToPrecache, urlsAlreadyPrecached) {\r\n    const precachedCount = urlsToPrecache.length;\r\n    const alreadyPrecachedCount = urlsAlreadyPrecached.length;\r\n    if (precachedCount || alreadyPrecachedCount) {\r\n        let message = `Precaching ${precachedCount} file${precachedCount === 1 ? '' : 's'}.`;\r\n        if (alreadyPrecachedCount > 0) {\r\n            message += ` ${alreadyPrecachedCount} ` +\r\n                `file${alreadyPrecachedCount === 1 ? ' is' : 's are'} already cached.`;\r\n        }\r\n        logger.groupCollapsed(message);\r\n        _nestedGroup(`View newly precached URLs.`, urlsToPrecache);\r\n        _nestedGroup(`View previously precached URLs.`, urlsAlreadyPrecached);\r\n        logger.groupEnd();\r\n    }\r\n}\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { assert } from 'workbox-core/_private/assert.js';\r\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\r\nimport { cacheWrapper } from 'workbox-core/_private/cacheWrapper.js';\r\nimport { fetchWrapper } from 'workbox-core/_private/fetchWrapper.js';\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport { WorkboxError } from 'workbox-core/_private/WorkboxError.js';\r\nimport { copyResponse } from 'workbox-core/copyResponse.js';\r\nimport { createCacheKey } from './utils/createCacheKey.js';\r\nimport { printCleanupDetails } from './utils/printCleanupDetails.js';\r\nimport { printInstallDetails } from './utils/printInstallDetails.js';\r\nimport './_version.js';\r\n/**\r\n * Performs efficient precaching of assets.\r\n *\r\n * @memberof module:workbox-precaching\r\n */\r\nclass PrecacheController {\r\n    /**\r\n     * Create a new PrecacheController.\r\n     *\r\n     * @param {string} [cacheName] An optional name for the cache, to override\r\n     * the default precache name.\r\n     */\r\n    constructor(cacheName) {\r\n        this._cacheName = cacheNames.getPrecacheName(cacheName);\r\n        this._urlsToCacheKeys = new Map();\r\n        this._urlsToCacheModes = new Map();\r\n        this._cacheKeysToIntegrities = new Map();\r\n    }\r\n    /**\r\n     * This method will add items to the precache list, removing duplicates\r\n     * and ensuring the information is valid.\r\n     *\r\n     * @param {\r\n     * Array<module:workbox-precaching.PrecacheController.PrecacheEntry|string>\r\n     * } entries Array of entries to precache.\r\n     */\r\n    addToCacheList(entries) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            assert.isArray(entries, {\r\n                moduleName: 'workbox-precaching',\r\n                className: 'PrecacheController',\r\n                funcName: 'addToCacheList',\r\n                paramName: 'entries',\r\n            });\r\n        }\r\n        const urlsToWarnAbout = [];\r\n        for (const entry of entries) {\r\n            // See https://github.com/GoogleChrome/workbox/issues/2259\r\n            if (typeof entry === 'string') {\r\n                urlsToWarnAbout.push(entry);\r\n            }\r\n            else if (entry && entry.revision === undefined) {\r\n                urlsToWarnAbout.push(entry.url);\r\n            }\r\n            const { cacheKey, url } = createCacheKey(entry);\r\n            const cacheMode = (typeof entry !== 'string' && entry.revision) ?\r\n                'reload' : 'default';\r\n            if (this._urlsToCacheKeys.has(url) &&\r\n                this._urlsToCacheKeys.get(url) !== cacheKey) {\r\n                throw new WorkboxError('add-to-cache-list-conflicting-entries', {\r\n                    firstEntry: this._urlsToCacheKeys.get(url),\r\n                    secondEntry: cacheKey,\r\n                });\r\n            }\r\n            if (typeof entry !== 'string' && entry.integrity) {\r\n                if (this._cacheKeysToIntegrities.has(cacheKey) &&\r\n                    this._cacheKeysToIntegrities.get(cacheKey) !== entry.integrity) {\r\n                    throw new WorkboxError('add-to-cache-list-conflicting-integrities', {\r\n                        url,\r\n                    });\r\n                }\r\n                this._cacheKeysToIntegrities.set(cacheKey, entry.integrity);\r\n            }\r\n            this._urlsToCacheKeys.set(url, cacheKey);\r\n            this._urlsToCacheModes.set(url, cacheMode);\r\n            if (urlsToWarnAbout.length > 0) {\r\n                const warningMessage = `Workbox is precaching URLs without revision ` +\r\n                    `info: ${urlsToWarnAbout.join(', ')}\\nThis is generally NOT safe. ` +\r\n                    `Learn more at https://bit.ly/wb-precache`;\r\n                if (process.env.NODE_ENV === 'production') {\r\n                    // Use console directly to display this warning without bloating\r\n                    // bundle sizes by pulling in all of the logger codebase in prod.\r\n                    console.warn(warningMessage);\r\n                }\r\n                else {\r\n                    logger.warn(warningMessage);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Precaches new and updated assets. Call this method from the service worker\r\n     * install event.\r\n     *\r\n     * @param {Object} options\r\n     * @param {Event} [options.event] The install event (if needed).\r\n     * @param {Array<Object>} [options.plugins] Plugins to be used for fetching\r\n     * and caching during install.\r\n     * @return {Promise<module:workbox-precaching.InstallResult>}\r\n     */\r\n    async install({ event, plugins } = {}) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            if (plugins) {\r\n                assert.isArray(plugins, {\r\n                    moduleName: 'workbox-precaching',\r\n                    className: 'PrecacheController',\r\n                    funcName: 'install',\r\n                    paramName: 'plugins',\r\n                });\r\n            }\r\n        }\r\n        const toBePrecached = [];\r\n        const alreadyPrecached = [];\r\n        const cache = await self.caches.open(this._cacheName);\r\n        const alreadyCachedRequests = await cache.keys();\r\n        const existingCacheKeys = new Set(alreadyCachedRequests.map((request) => request.url));\r\n        for (const [url, cacheKey] of this._urlsToCacheKeys) {\r\n            if (existingCacheKeys.has(cacheKey)) {\r\n                alreadyPrecached.push(url);\r\n            }\r\n            else {\r\n                toBePrecached.push({ cacheKey, url });\r\n            }\r\n        }\r\n        const precacheRequests = toBePrecached.map(({ cacheKey, url }) => {\r\n            const integrity = this._cacheKeysToIntegrities.get(cacheKey);\r\n            const cacheMode = this._urlsToCacheModes.get(url);\r\n            return this._addURLToCache({\r\n                cacheKey,\r\n                cacheMode,\r\n                event,\r\n                integrity,\r\n                plugins,\r\n                url,\r\n            });\r\n        });\r\n        await Promise.all(precacheRequests);\r\n        const updatedURLs = toBePrecached.map((item) => item.url);\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            printInstallDetails(updatedURLs, alreadyPrecached);\r\n        }\r\n        return {\r\n            updatedURLs,\r\n            notUpdatedURLs: alreadyPrecached,\r\n        };\r\n    }\r\n    /**\r\n     * Deletes assets that are no longer present in the current precache manifest.\r\n     * Call this method from the service worker activate event.\r\n     *\r\n     * @return {Promise<module:workbox-precaching.CleanupResult>}\r\n     */\r\n    async activate() {\r\n        const cache = await self.caches.open(this._cacheName);\r\n        const currentlyCachedRequests = await cache.keys();\r\n        const expectedCacheKeys = new Set(this._urlsToCacheKeys.values());\r\n        const deletedURLs = [];\r\n        for (const request of currentlyCachedRequests) {\r\n            if (!expectedCacheKeys.has(request.url)) {\r\n                await cache.delete(request);\r\n                deletedURLs.push(request.url);\r\n            }\r\n        }\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            printCleanupDetails(deletedURLs);\r\n        }\r\n        return { deletedURLs };\r\n    }\r\n    /**\r\n     * Requests the entry and saves it to the cache if the response is valid.\r\n     * By default, any response with a status code of less than 400 (including\r\n     * opaque responses) is considered valid.\r\n     *\r\n     * If you need to use custom criteria to determine what's valid and what\r\n     * isn't, then pass in an item in `options.plugins` that implements the\r\n     * `cacheWillUpdate()` lifecycle event.\r\n     *\r\n     * @private\r\n     * @param {Object} options\r\n     * @param {string} options.cacheKey The string to use a cache key.\r\n     * @param {string} options.url The URL to fetch and cache.\r\n     * @param {string} [options.cacheMode] The cache mode for the network request.\r\n     * @param {Event} [options.event] The install event (if passed).\r\n     * @param {Array<Object>} [options.plugins] An array of plugins to apply to\r\n     * fetch and caching.\r\n     * @param {string} [options.integrity] The value to use for the `integrity`\r\n     * field when making the request.\r\n     */\r\n    async _addURLToCache({ cacheKey, url, cacheMode, event, plugins, integrity }) {\r\n        const request = new Request(url, {\r\n            integrity,\r\n            cache: cacheMode,\r\n            credentials: 'same-origin',\r\n        });\r\n        let response = await fetchWrapper.fetch({\r\n            event,\r\n            plugins,\r\n            request,\r\n        });\r\n        // Allow developers to override the default logic about what is and isn't\r\n        // valid by passing in a plugin implementing cacheWillUpdate(), e.g.\r\n        // a `CacheableResponsePlugin` instance.\r\n        let cacheWillUpdatePlugin;\r\n        for (const plugin of (plugins || [])) {\r\n            if ('cacheWillUpdate' in plugin) {\r\n                cacheWillUpdatePlugin = plugin;\r\n            }\r\n        }\r\n        const isValidResponse = cacheWillUpdatePlugin ?\r\n            // Use a callback if provided. It returns a truthy value if valid.\r\n            // NOTE: invoke the method on the plugin instance so the `this` context\r\n            // is correct.\r\n            await cacheWillUpdatePlugin.cacheWillUpdate({ event, request, response }) :\r\n            // Otherwise, default to considering any response status under 400 valid.\r\n            // This includes, by default, considering opaque responses valid.\r\n            response.status < 400;\r\n        // Consider this a failure, leading to the `install` handler failing, if\r\n        // we get back an invalid response.\r\n        if (!isValidResponse) {\r\n            throw new WorkboxError('bad-precaching-response', {\r\n                url,\r\n                status: response.status,\r\n            });\r\n        }\r\n        // Redirected responses cannot be used to satisfy a navigation request, so\r\n        // any redirected response must be \"copied\" rather than cloned, so the new\r\n        // response doesn't contain the `redirected` flag. See:\r\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=669363&desc=2#c1\r\n        if (response.redirected) {\r\n            response = await copyResponse(response);\r\n        }\r\n        await cacheWrapper.put({\r\n            event,\r\n            plugins,\r\n            response,\r\n            // `request` already uses `url`. We may be able to reuse it.\r\n            request: cacheKey === url ? request : new Request(cacheKey),\r\n            cacheName: this._cacheName,\r\n            matchOptions: {\r\n                ignoreSearch: true,\r\n            },\r\n        });\r\n    }\r\n    /**\r\n     * Returns a mapping of a precached URL to the corresponding cache key, taking\r\n     * into account the revision information for the URL.\r\n     *\r\n     * @return {Map<string, string>} A URL to cache key mapping.\r\n     */\r\n    getURLsToCacheKeys() {\r\n        return this._urlsToCacheKeys;\r\n    }\r\n    /**\r\n     * Returns a list of all the URLs that have been precached by the current\r\n     * service worker.\r\n     *\r\n     * @return {Array<string>} The precached URLs.\r\n     */\r\n    getCachedURLs() {\r\n        return [...this._urlsToCacheKeys.keys()];\r\n    }\r\n    /**\r\n     * Returns the cache key used for storing a given URL. If that URL is\r\n     * unversioned, like `/index.html', then the cache key will be the original\r\n     * URL with a search parameter appended to it.\r\n     *\r\n     * @param {string} url A URL whose cache key you want to look up.\r\n     * @return {string} The versioned URL that corresponds to a cache key\r\n     * for the original URL, or undefined if that URL isn't precached.\r\n     */\r\n    getCacheKeyForURL(url) {\r\n        const urlObject = new URL(url, location.href);\r\n        return this._urlsToCacheKeys.get(urlObject.href);\r\n    }\r\n    /**\r\n     * This acts as a drop-in replacement for [`cache.match()`](https://developer.mozilla.org/en-US/docs/Web/API/Cache/match)\r\n     * with the following differences:\r\n     *\r\n     * - It knows what the name of the precache is, and only checks in that cache.\r\n     * - It allows you to pass in an \"original\" URL without versioning parameters,\r\n     * and it will automatically look up the correct cache key for the currently\r\n     * active revision of that URL.\r\n     *\r\n     * E.g., `matchPrecache('index.html')` will find the correct precached\r\n     * response for the currently active service worker, even if the actual cache\r\n     * key is `'/index.html?__WB_REVISION__=1234abcd'`.\r\n     *\r\n     * @param {string|Request} request The key (without revisioning parameters)\r\n     * to look up in the precache.\r\n     * @return {Promise<Response|undefined>}\r\n     */\r\n    async matchPrecache(request) {\r\n        const url = request instanceof Request ? request.url : request;\r\n        const cacheKey = this.getCacheKeyForURL(url);\r\n        if (cacheKey) {\r\n            const cache = await self.caches.open(this._cacheName);\r\n            return cache.match(cacheKey);\r\n        }\r\n        return undefined;\r\n    }\r\n    /**\r\n     * Returns a function that can be used within a\r\n     * {@link module:workbox-routing.Route} that will find a response for the\r\n     * incoming request against the precache.\r\n     *\r\n     * If for an unexpected reason there is a cache miss for the request,\r\n     * this will fall back to retrieving the `Response` via `fetch()` when\r\n     * `fallbackToNetwork` is `true`.\r\n     *\r\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\r\n     * response from the network if there's a precache miss.\r\n     * @return {module:workbox-routing~handlerCallback}\r\n     */\r\n    createHandler(fallbackToNetwork = true) {\r\n        return async ({ request }) => {\r\n            try {\r\n                const response = await this.matchPrecache(request);\r\n                if (response) {\r\n                    return response;\r\n                }\r\n                // This shouldn't normally happen, but there are edge cases:\r\n                // https://github.com/GoogleChrome/workbox/issues/1441\r\n                throw new WorkboxError('missing-precache-entry', {\r\n                    cacheName: this._cacheName,\r\n                    url: request instanceof Request ? request.url : request,\r\n                });\r\n            }\r\n            catch (error) {\r\n                if (fallbackToNetwork) {\r\n                    if (process.env.NODE_ENV !== 'production') {\r\n                        logger.debug(`Unable to respond with precached response. ` +\r\n                            `Falling back to network.`, error);\r\n                    }\r\n                    return fetch(request);\r\n                }\r\n                throw error;\r\n            }\r\n        };\r\n    }\r\n    /**\r\n     * Returns a function that looks up `url` in the precache (taking into\r\n     * account revision information), and returns the corresponding `Response`.\r\n     *\r\n     * If for an unexpected reason there is a cache miss when looking up `url`,\r\n     * this will fall back to retrieving the `Response` via `fetch()` when\r\n     * `fallbackToNetwork` is `true`.\r\n     *\r\n     * @param {string} url The precached URL which will be used to lookup the\r\n     * `Response`.\r\n     * @param {boolean} [fallbackToNetwork=true] Whether to attempt to get the\r\n     * response from the network if there's a precache miss.\r\n     * @return {module:workbox-routing~handlerCallback}\r\n     */\r\n    createHandlerBoundToURL(url, fallbackToNetwork = true) {\r\n        const cacheKey = this.getCacheKeyForURL(url);\r\n        if (!cacheKey) {\r\n            throw new WorkboxError('non-precached-url', { url });\r\n        }\r\n        const handler = this.createHandler(fallbackToNetwork);\r\n        const request = new Request(url);\r\n        return () => handler({ request });\r\n    }\r\n}\r\nexport { PrecacheController };\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { PrecacheController } from '../PrecacheController.js';\r\nimport '../_version.js';\r\nlet precacheController;\r\n/**\r\n * @return {PrecacheController}\r\n * @private\r\n */\r\nexport const getOrCreatePrecacheController = () => {\r\n    if (!precacheController) {\r\n        precacheController = new PrecacheController();\r\n    }\r\n    return precacheController;\r\n};\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\n/**\r\n * Removes any URL search parameters that should be ignored.\r\n *\r\n * @param {URL} urlObject The original URL.\r\n * @param {Array<RegExp>} ignoreURLParametersMatching RegExps to test against\r\n * each search parameter name. Matches mean that the search parameter should be\r\n * ignored.\r\n * @return {URL} The URL with any ignored search parameters removed.\r\n *\r\n * @private\r\n * @memberof module:workbox-precaching\r\n */\r\nexport function removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching = []) {\r\n    // Convert the iterable into an array at the start of the loop to make sure\r\n    // deletion doesn't mess up iteration.\r\n    for (const paramName of [...urlObject.searchParams.keys()]) {\r\n        if (ignoreURLParametersMatching.some((regExp) => regExp.test(paramName))) {\r\n            urlObject.searchParams.delete(paramName);\r\n        }\r\n    }\r\n    return urlObject;\r\n}\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { removeIgnoredSearchParams } from './removeIgnoredSearchParams.js';\r\nimport '../_version.js';\r\n/**\r\n * Generator function that yields possible variations on the original URL to\r\n * check, one at a time.\r\n *\r\n * @param {string} url\r\n * @param {Object} options\r\n *\r\n * @private\r\n * @memberof module:workbox-precaching\r\n */\r\nexport function* generateURLVariations(url, { ignoreURLParametersMatching, directoryIndex, cleanURLs, urlManipulation, } = {}) {\r\n    const urlObject = new URL(url, location.href);\r\n    urlObject.hash = '';\r\n    yield urlObject.href;\r\n    const urlWithoutIgnoredParams = removeIgnoredSearchParams(urlObject, ignoreURLParametersMatching);\r\n    yield urlWithoutIgnoredParams.href;\r\n    if (directoryIndex && urlWithoutIgnoredParams.pathname.endsWith('/')) {\r\n        const directoryURL = new URL(urlWithoutIgnoredParams.href);\r\n        directoryURL.pathname += directoryIndex;\r\n        yield directoryURL.href;\r\n    }\r\n    if (cleanURLs) {\r\n        const cleanURL = new URL(urlWithoutIgnoredParams.href);\r\n        cleanURL.pathname += '.html';\r\n        yield cleanURL.href;\r\n    }\r\n    if (urlManipulation) {\r\n        const additionalURLs = urlManipulation({ url: urlObject });\r\n        for (const urlToAttempt of additionalURLs) {\r\n            yield urlToAttempt.href;\r\n        }\r\n    }\r\n}\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { getOrCreatePrecacheController } from './getOrCreatePrecacheController.js';\r\nimport { generateURLVariations } from './generateURLVariations.js';\r\nimport '../_version.js';\r\n/**\r\n * This function will take the request URL and manipulate it based on the\r\n * configuration options.\r\n *\r\n * @param {string} url\r\n * @param {Object} options\r\n * @return {string} Returns the URL in the cache that matches the request,\r\n * if possible.\r\n *\r\n * @private\r\n */\r\nexport const getCacheKeyForURL = (url, options) => {\r\n    const precacheController = getOrCreatePrecacheController();\r\n    const urlsToCacheKeys = precacheController.getURLsToCacheKeys();\r\n    for (const possibleURL of generateURLVariations(url, options)) {\r\n        const possibleCacheKey = urlsToCacheKeys.get(possibleURL);\r\n        if (possibleCacheKey) {\r\n            return possibleCacheKey;\r\n        }\r\n    }\r\n};\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\r\nimport { getFriendlyURL } from 'workbox-core/_private/getFriendlyURL.js';\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport { getCacheKeyForURL } from './getCacheKeyForURL.js';\r\nimport '../_version.js';\r\n/**\r\n * Adds a `fetch` listener to the service worker that will\r\n * respond to\r\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\r\n * with precached assets.\r\n *\r\n * Requests for assets that aren't precached, the `FetchEvent` will not be\r\n * responded to, allowing the event to fall through to other `fetch` event\r\n * listeners.\r\n *\r\n * NOTE: when called more than once this method will replace the previously set\r\n * configuration options. Calling it more than once is not recommended outside\r\n * of tests.\r\n *\r\n * @private\r\n * @param {Object} [options]\r\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\r\n * check cache entries for a URLs ending with '/' to see if there is a hit when\r\n * appending the `directoryIndex` value.\r\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\r\n * array of regex's to remove search params when looking for a cache match.\r\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\r\n * check the cache for the URL with a `.html` added to the end of the end.\r\n * @param {workbox.precaching~urlManipulation} [options.urlManipulation]\r\n * This is a function that should take a URL and return an array of\r\n * alternative URLs that should be checked for precache matches.\r\n */\r\nexport const addFetchListener = ({ ignoreURLParametersMatching = [/^utm_/], directoryIndex = 'index.html', cleanURLs = true, urlManipulation, } = {}) => {\r\n    const cacheName = cacheNames.getPrecacheName();\r\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\r\n    self.addEventListener('fetch', ((event) => {\r\n        const precachedURL = getCacheKeyForURL(event.request.url, {\r\n            cleanURLs,\r\n            directoryIndex,\r\n            ignoreURLParametersMatching,\r\n            urlManipulation,\r\n        });\r\n        if (!precachedURL) {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                logger.debug(`Precaching did not find a match for ` +\r\n                    getFriendlyURL(event.request.url));\r\n            }\r\n            return;\r\n        }\r\n        let responsePromise = self.caches.open(cacheName).then((cache) => {\r\n            return cache.match(precachedURL);\r\n        }).then((cachedResponse) => {\r\n            if (cachedResponse) {\r\n                return cachedResponse;\r\n            }\r\n            // Fall back to the network if we don't have a cached response\r\n            // (perhaps due to manual cache cleanup).\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                logger.warn(`The precached response for ` +\r\n                    `${getFriendlyURL(precachedURL)} in ${cacheName} was not found. ` +\r\n                    `Falling back to the network instead.`);\r\n            }\r\n            return fetch(precachedURL);\r\n        });\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            responsePromise = responsePromise.then((response) => {\r\n                // Workbox is going to handle the route.\r\n                // print the routing details to the console.\r\n                logger.groupCollapsed(`Precaching is responding to: ` +\r\n                    getFriendlyURL(event.request.url));\r\n                logger.log(`Serving the precached url: ${precachedURL}`);\r\n                logger.groupCollapsed(`View request details here.`);\r\n                logger.log(event.request);\r\n                logger.groupEnd();\r\n                logger.groupCollapsed(`View response details here.`);\r\n                logger.log(response);\r\n                logger.groupEnd();\r\n                logger.groupEnd();\r\n                return response;\r\n            });\r\n        }\r\n        event.respondWith(responsePromise);\r\n    }));\r\n};\r\n","/*\r\n  Copyright 2019 Google LLC\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { addFetchListener } from './utils/addFetchListener.js';\r\nimport './_version.js';\r\nlet listenerAdded = false;\r\n/**\r\n * Add a `fetch` listener to the service worker that will\r\n * respond to\r\n * [network requests]{@link https://developer.mozilla.org/en-US/docs/Web/API/Service_Worker_API/Using_Service_Workers#Custom_responses_to_requests}\r\n * with precached assets.\r\n *\r\n * Requests for assets that aren't precached, the `FetchEvent` will not be\r\n * responded to, allowing the event to fall through to other `fetch` event\r\n * listeners.\r\n *\r\n * @param {Object} [options]\r\n * @param {string} [options.directoryIndex=index.html] The `directoryIndex` will\r\n * check cache entries for a URLs ending with '/' to see if there is a hit when\r\n * appending the `directoryIndex` value.\r\n * @param {Array<RegExp>} [options.ignoreURLParametersMatching=[/^utm_/]] An\r\n * array of regex's to remove search params when looking for a cache match.\r\n * @param {boolean} [options.cleanURLs=true] The `cleanURLs` option will\r\n * check the cache for the URL with a `.html` added to the end of the end.\r\n * @param {module:workbox-precaching~urlManipulation} [options.urlManipulation]\r\n * This is a function that should take a URL and return an array of\r\n * alternative URLs that should be checked for precache matches.\r\n *\r\n * @memberof module:workbox-precaching\r\n */\r\nfunction addRoute(options) {\r\n    if (!listenerAdded) {\r\n        addFetchListener(options);\r\n        listenerAdded = true;\r\n    }\r\n}\r\nexport { addRoute };\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\nconst plugins = [];\r\nexport const precachePlugins = {\r\n    /*\r\n     * @return {Array}\r\n     * @private\r\n     */\r\n    get() {\r\n        return plugins;\r\n    },\r\n    /*\r\n     * @param {Array} newPlugins\r\n     * @private\r\n     */\r\n    add(newPlugins) {\r\n        plugins.push(...newPlugins);\r\n    },\r\n};\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport { getOrCreatePrecacheController } from './utils/getOrCreatePrecacheController.js';\r\nimport { precachePlugins } from './utils/precachePlugins.js';\r\nimport './_version.js';\r\nconst installListener = (event) => {\r\n    const precacheController = getOrCreatePrecacheController();\r\n    const plugins = precachePlugins.get();\r\n    event.waitUntil(precacheController.install({ event, plugins })\r\n        .catch((error) => {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n            logger.error(`Service worker installation failed. It will ` +\r\n                `be retried automatically during the next navigation.`);\r\n        }\r\n        // Re-throw the error to ensure installation fails.\r\n        throw error;\r\n    }));\r\n};\r\nconst activateListener = (event) => {\r\n    const precacheController = getOrCreatePrecacheController();\r\n    event.waitUntil(precacheController.activate());\r\n};\r\n/**\r\n * Adds items to the precache list, removing any duplicates and\r\n * stores the files in the\r\n * [\"precache cache\"]{@link module:workbox-core.cacheNames} when the service\r\n * worker installs.\r\n *\r\n * This method can be called multiple times.\r\n *\r\n * Please note: This method **will not** serve any of the cached files for you.\r\n * It only precaches files. To respond to a network request you call\r\n * [addRoute()]{@link module:workbox-precaching.addRoute}.\r\n *\r\n * If you have a single array of files to precache, you can just call\r\n * [precacheAndRoute()]{@link module:workbox-precaching.precacheAndRoute}.\r\n *\r\n * @param {Array<Object|string>} [entries=[]] Array of entries to precache.\r\n *\r\n * @memberof module:workbox-precaching\r\n */\r\nfunction precache(entries) {\r\n    const precacheController = getOrCreatePrecacheController();\r\n    precacheController.addToCacheList(entries);\r\n    if (entries.length > 0) {\r\n        // NOTE: these listeners will only be added once (even if the `precache()`\r\n        // method is called multiple times) because event listeners are implemented\r\n        // as a set, where each listener must be unique.\r\n        // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\r\n        self.addEventListener('install', installListener);\r\n        self.addEventListener('activate', activateListener);\r\n    }\r\n}\r\nexport { precache };\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { addRoute } from './addRoute.js';\r\nimport { precache } from './precache.js';\r\nimport './_version.js';\r\n/**\r\n * This method will add entries to the precache list and add a route to\r\n * respond to fetch events.\r\n *\r\n * This is a convenience method that will call\r\n * [precache()]{@link module:workbox-precaching.precache} and\r\n * [addRoute()]{@link module:workbox-precaching.addRoute} in a single call.\r\n *\r\n * @param {Array<Object|string>} entries Array of entries to precache.\r\n * @param {Object} [options] See\r\n * [addRoute() options]{@link module:workbox-precaching.addRoute}.\r\n *\r\n * @memberof module:workbox-precaching\r\n */\r\nfunction precacheAndRoute(entries, options) {\r\n    precache(entries);\r\n    addRoute(options);\r\n}\r\nexport { precacheAndRoute };\r\n","/*\r\n  Copyright 2018 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport '../_version.js';\r\nconst SUBSTRING_TO_FIND = '-precache-';\r\n/**\r\n * Cleans up incompatible precaches that were created by older versions of\r\n * Workbox, by a service worker registered under the current scope.\r\n *\r\n * This is meant to be called as part of the `activate` event.\r\n *\r\n * This should be safe to use as long as you don't include `substringToFind`\r\n * (defaulting to `-precache-`) in your non-precache cache names.\r\n *\r\n * @param {string} currentPrecacheName The cache name currently in use for\r\n * precaching. This cache won't be deleted.\r\n * @param {string} [substringToFind='-precache-'] Cache names which include this\r\n * substring will be deleted (excluding `currentPrecacheName`).\r\n * @return {Array<string>} A list of all the cache names that were deleted.\r\n *\r\n * @private\r\n * @memberof module:workbox-precaching\r\n */\r\nconst deleteOutdatedCaches = async (currentPrecacheName, substringToFind = SUBSTRING_TO_FIND) => {\r\n    const cacheNames = await self.caches.keys();\r\n    const cacheNamesToDelete = cacheNames.filter((cacheName) => {\r\n        return cacheName.includes(substringToFind) &&\r\n            cacheName.includes(self.registration.scope) &&\r\n            cacheName !== currentPrecacheName;\r\n    });\r\n    await Promise.all(cacheNamesToDelete.map((cacheName) => self.caches.delete(cacheName)));\r\n    return cacheNamesToDelete;\r\n};\r\nexport { deleteOutdatedCaches };\r\n","/*\r\n  Copyright 2019 Google LLC\r\n\r\n  Use of this source code is governed by an MIT-style\r\n  license that can be found in the LICENSE file or at\r\n  https://opensource.org/licenses/MIT.\r\n*/\r\nimport { cacheNames } from 'workbox-core/_private/cacheNames.js';\r\nimport { logger } from 'workbox-core/_private/logger.js';\r\nimport { deleteOutdatedCaches } from './utils/deleteOutdatedCaches.js';\r\nimport './_version.js';\r\n/**\r\n * Adds an `activate` event listener which will clean up incompatible\r\n * precaches that were created by older versions of Workbox.\r\n *\r\n * @memberof module:workbox-precaching\r\n */\r\nfunction cleanupOutdatedCaches() {\r\n    // See https://github.com/Microsoft/TypeScript/issues/28357#issuecomment-436484705\r\n    self.addEventListener('activate', ((event) => {\r\n        const cacheName = cacheNames.getPrecacheName();\r\n        event.waitUntil(deleteOutdatedCaches(cacheName).then((cachesDeleted) => {\r\n            if (process.env.NODE_ENV !== 'production') {\r\n                if (cachesDeleted.length > 0) {\r\n                    logger.log(`The following out-of-date precaches were cleaned up ` +\r\n                        `automatically:`, cachesDeleted);\r\n                }\r\n            }\r\n        }));\r\n    }));\r\n}\r\nexport { cleanupOutdatedCaches };\r\n"],"names":["self","_","e","skipWaiting","addEventListener","clientsClaim","clients","claim","_cacheNameDetails","googleAnalytics","precache","prefix","runtime","suffix","registration","scope","_createCacheName","cacheName","filter","value","length","join","eachCacheNameDetail","fn","key","Object","keys","cacheNames","updateDetails","details","getGoogleAnalyticsName","userCacheName","getPrecacheName","getPrefix","getRuntimeName","getSuffix","getFriendlyURL","url","urlObj","URL","String","location","href","replace","RegExp","origin","logger","__WB_DISABLE_DEV_LOGS","inGroup","methodToColorMap","debug","log","warn","error","groupCollapsed","groupEnd","print","method","args","test","navigator","userAgent","console","styles","logPrefix","api","loggerMethods","messages","paramName","validValueDescription","Error","JSON","stringify","moduleName","className","funcName","expectedType","expectedClass","isReturnValueProblem","name","expectedMethod","entry","firstEntry","secondEntry","_entryId","thrownError","message","cacheNameId","methodName","normalizedRangeHeader","size","start","end","status","generatorFunction","code","messageGenerator","WorkboxError","constructor","errorCode","isSWEnv","isArray","Array","hasMethod","object","type","isType","isInstance","isOneOf","validValues","includes","isArrayOfClass","item","finalAssertExports","quotaErrorCallbacks","Set","executeQuotaErrorCallbacks","callback","pluginUtils","plugins","callbackName","plugin","_getEffectiveRequest","request","mode","cacheKeyWillBeUsedPlugins","effectiveRequest","call","Request","assert","_isResponseSafeToCache","response","event","responseToCache","pluginsUsed","pluginMethod","Response","undefined","matchWrapper","matchOptions","cache","caches","open","cachedResponse","match","putWrapper","updatePlugins","oldResponse","put","newResponse","cacheWrapper","wrappedFetch","fetchOptions","FetchEvent","preloadResponse","possiblePreloadResponse","failedFetchPlugins","originalRequest","clone","requestClone","err","pluginFilteredRequest","fetchResponse","fetch","fetchWrapper","supportStatus","canConstructResponseFromBodyStream","testResponse","body","copyResponse","modifier","clonedResponse","responseInit","headers","Headers","statusText","modifiedResponseInit","blob","REVISION_SEARCH_PARAM","createCacheKey","urlObject","cacheKey","revision","cacheKeyURL","originalURL","searchParams","set","logGroup","groupTitle","deletedURLs","printCleanupDetails","deletionCount","_nestedGroup","urls","printInstallDetails","urlsToPrecache","urlsAlreadyPrecached","precachedCount","alreadyPrecachedCount","PrecacheController","_cacheName","_urlsToCacheKeys","Map","_urlsToCacheModes","_cacheKeysToIntegrities","addToCacheList","entries","urlsToWarnAbout","push","cacheMode","has","get","integrity","warningMessage","install","toBePrecached","alreadyPrecached","alreadyCachedRequests","existingCacheKeys","map","precacheRequests","_addURLToCache","Promise","all","updatedURLs","notUpdatedURLs","activate","currentlyCachedRequests","expectedCacheKeys","values","delete","credentials","cacheWillUpdatePlugin","isValidResponse","cacheWillUpdate","redirected","ignoreSearch","getURLsToCacheKeys","getCachedURLs","getCacheKeyForURL","matchPrecache","createHandler","fallbackToNetwork","createHandlerBoundToURL","handler","precacheController","getOrCreatePrecacheController","removeIgnoredSearchParams","ignoreURLParametersMatching","some","regExp","generateURLVariations","directoryIndex","cleanURLs","urlManipulation","hash","urlWithoutIgnoredParams","pathname","endsWith","directoryURL","cleanURL","additionalURLs","urlToAttempt","options","urlsToCacheKeys","possibleURL","possibleCacheKey","addFetchListener","precachedURL","responsePromise","then","respondWith","listenerAdded","addRoute","precachePlugins","add","newPlugins","installListener","waitUntil","catch","activateListener","precacheAndRoute","SUBSTRING_TO_FIND","deleteOutdatedCaches","currentPrecacheName","substringToFind","cacheNamesToDelete","cleanupOutdatedCaches","cachesDeleted"],"mappings":"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"}