{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport { Container } from \"../components/Container\";\nimport { Typography, List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport Link from \"next/link\";\n\nvar Index = function Index(_ref) {\n  var shows = _ref.shows;\n  return __jsx(Container, null, __jsx(Typography, {\n    children: \"Batman TV Shows\",\n    variant: \"h6\"\n  }), __jsx(List, null, shows.map(function (show) {\n    return __jsx(Link, {\n      key: show.id,\n      href: \"/list/[id]\",\n      as: \"/list/\".concat(show.id)\n    }, __jsx(ListItem, {\n      button: true\n    }, __jsx(ListItemIcon, {\n      children: __jsx(CheckIcon, null)\n    }), __jsx(ListItemText, {\n      primary: show.name\n    })));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/search/shows?q=batman\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":null,"metadata":{},"sourceType":"module"}