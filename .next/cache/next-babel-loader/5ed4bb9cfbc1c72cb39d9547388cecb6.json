{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\visha\\\\Desktop\\\\next_pwa_basic\\\\pages\\\\list.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport fetch from \"isomorphic-unfetch\";\nimport { Container } from \"../components/Container\";\nimport { Typography, List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport Link from \"next/link\";\n\nvar Index = function Index(_ref) {\n  var shows = _ref.shows;\n  return __jsx(Container, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 3\n    }\n  }, __jsx(Typography, {\n    children: \"Batman TV Shows\",\n    variant: \"h6\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }), __jsx(List, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, shows.map(function (show) {\n    return __jsx(Link, {\n      key: show.id,\n      href: \"/list/[id]\",\n      as: \"/list/\".concat(show.id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, __jsx(ListItem, {\n      button: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }\n    }, __jsx(ListItemIcon, {\n      children: __jsx(CheckIcon, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 37\n        }\n      }),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }), __jsx(ListItemText, {\n      primary: show.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }\n    })));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(\"https://api.tvmaze.com/search/shows?q=batman\"));\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            shows: data.map(function (entry) {\n              return entry.show;\n            })\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["C:/Users/visha/Desktop/next_pwa_basic/pages/list.tsx"],"names":["fetch","Container","Typography","List","ListItem","ListItemIcon","ListItemText","CheckIcon","Link","Index","shows","map","show","id","name","getInitialProps","res","json","data","entry"],"mappings":";;;;;;;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,QAA0B,yBAA1B;AACA,SACEC,UADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,YAJF,EAKEC,YALF,QAMO,mBANP;AAOA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAOA,IAAMC,KAAuC,GAAG,SAA1CA,KAA0C;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAC9C,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,QAAQ,EAAC,iBAArB;AAAuC,IAAA,OAAO,EAAC,IAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb,MAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,MAAA,IAAI,EAAC,YAAzB;AAAsC,MAAA,EAAE,kBAAWD,IAAI,CAACC,EAAhB,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,QAAD;AAAU,MAAA,MAAM,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AAAc,MAAA,QAAQ,EAAE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,YAAD;AAAc,MAAA,OAAO,EAAED,IAAI,CAACE,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,CADa;AAAA,GAAd,CADH,CAFF,CAD8C;AAAA,CAAhD;;AAgBAL,KAAK,CAACM,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACJf,KAAK,CAAC,8CAAD,CADD;;AAAA;AAChBgB,UAAAA,GADgB;AAAA;AAAA,2CAEoBA,GAAG,CAACC,IAAJ,EAFpB;;AAAA;AAEhBC,UAAAA,IAFgB;AAAA,2CAIf;AACLR,YAAAA,KAAK,EAAEQ,IAAI,CAACP,GAAL,CAAS,UAAAQ,KAAK;AAAA,qBAAIA,KAAK,CAACP,IAAV;AAAA,aAAd;AADF,WAJe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AASA,eAAeH,KAAf","sourcesContent":["import { NextPage } from \"next\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport { Container } from \"../components/Container\";\r\nimport {\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText\r\n} from \"@material-ui/core\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport Link from \"next/link\";\r\n\r\ninterface Show {\r\n  id: number;\r\n  name: string;\r\n}\r\n\r\nconst Index: NextPage<{ shows: Array<Show> }> = ({ shows }) => (\r\n  <Container>\r\n    <Typography children=\"Batman TV Shows\" variant=\"h6\" />\r\n    <List>\r\n      {shows.map(show => (\r\n        <Link key={show.id} href=\"/list/[id]\" as={`/list/${show.id}`}>\r\n          <ListItem button>\r\n            <ListItemIcon children={<CheckIcon />} />\r\n            <ListItemText primary={show.name} />\r\n          </ListItem>\r\n        </Link>\r\n      ))}\r\n    </List>\r\n  </Container>\r\n);\r\n\r\nIndex.getInitialProps = async () => {\r\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=batman\");\r\n  const data: Array<{ show: Show }> = await res.json();\r\n\r\n  return {\r\n    shows: data.map(entry => entry.show)\r\n  };\r\n};\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}