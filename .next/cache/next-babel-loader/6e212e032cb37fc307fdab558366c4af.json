{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Container } from \"../components/Container\";\nimport { Typography } from \"@material-ui/core\";\nvar publicVapidKey = \"BCj54G9kp6-MuxVje45_rEdNd24WnFaDLOquVDqrdeqGy_NwwaeTovYJoKdP429zTri6hqypw4TXKMFF6a57aMQ\";\n\nfunction urlBase64ToUint8Array(base64String) {\n  var padding = '='.repeat((4 - base64String.length % 4) % 4);\n  var base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/');\n  var rawData = window.atob(base64);\n  var outputArray = new Uint8Array(rawData.length);\n\n  for (var i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n\n  return outputArray;\n}\n\nvar notification = /*#__PURE__*/function (_Component) {\n  _inherits(notification, _Component);\n\n  var _super = _createSuper(notification);\n\n  function notification(props) {\n    var _this;\n\n    _classCallCheck(this, notification);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"configurePushSubscription\", function () {\n      _this.setState({\n        loading: true\n      });\n\n      console.log(\"you are inside the web notification subscription code !!\");\n\n      if (!'Notification' in navigator) {\n        return;\n      }\n\n      var swRef;\n      navigator.serviceWorker.ready.then(function (sw) {\n        swRef = sw;\n        return swRef.pushManager.getSubscription(); // this allow to get the subscripition \n      }).then(function (sub) {\n        if (sub === null) {\n          // create a new subscription \n          console.log(\"we dont have the subcription\");\n          return swRef.pushManager.subscribe({\n            userVisibleOnly: true,\n            applicationServerKey: urlBase64ToUint8Array(publicVapidKey)\n          }).then(function (subscription) {\n            console.log(\"user is subscribed\", subscription);\n          });\n        } else {\n          // we have a subscription ;\n          console.log(\"we have the subcription\", sub);\n          return sub;\n        }\n      }).then(function (newSub) {\n        // here you have to store this newsbu i.e. your subscription user to database\n        // with the help of newSub Request payload // you get the endpoing and keys {p256dh , auth}\n        // which is used to send the notification to the user \n        console.log(\"this is subsciriton body\", newSub);\n        var urlDb = \"https://pwa-serv-notify.herokuapp.com/api/pwa/subscribe\";\n        return fetch(urlDb, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          body: JSON.stringify(newSub)\n        });\n      }).then(function (res) {\n        if (res.ok) {\n          console.log(\"new subscriber is added to DB \", res);\n          this.setState({\n            loading: false\n          });\n          var subBtn = document.getElementById(\"sub-notification\");\n          subBtn.style.display = \"none\";\n        }\n      })[\"catch\"](function (err) {\n        this.setState({\n          loading: false\n        });\n        console.log(\"server : App subscriber error \", err);\n      });\n    });\n\n    _this.state = {\n      isLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(notification, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", null, __jsx(Container, null, __jsx(Typography, {\n        children: \"Notification\",\n        variant: \"h6\"\n      }), this.state.isLoading && __jsx(\"h3\", null, \"Loading...\"), __jsx(\"h6\", null, \"Start Notification from server \"), __jsx(\"button\", {\n        onClick: function onClick() {\n          return _this2.configurePushSubscription();\n        }\n      }, \"Start Server Notification\")));\n    }\n  }]);\n\n  return notification;\n}(Component);\n\nexport { notification as default };","map":{"version":3,"sources":["C:/Users/visha/Desktop/next_pwa_basic/pages/notification.js"],"names":["React","Component","Container","Typography","publicVapidKey","urlBase64ToUint8Array","base64String","padding","repeat","length","base64","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","notification","props","setState","loading","console","log","navigator","swRef","serviceWorker","ready","then","sw","pushManager","getSubscription","sub","subscribe","userVisibleOnly","applicationServerKey","subscription","newSub","urlDb","fetch","method","headers","body","JSON","stringify","res","ok","subBtn","document","getElementById","style","display","err","state","isLoading","configurePushSubscription"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { Container } from \"../components/Container\";\r\nimport { Typography } from \"@material-ui/core\";\r\n\r\nconst publicVapidKey = \"BCj54G9kp6-MuxVje45_rEdNd24WnFaDLOquVDqrdeqGy_NwwaeTovYJoKdP429zTri6hqypw4TXKMFF6a57aMQ\";\r\n\r\nfunction urlBase64ToUint8Array(base64String) {\r\n    var padding = '='.repeat((4 - base64String.length % 4) % 4);\r\n    var base64 = (base64String + padding)\r\n        .replace(/\\-/g, '+')\r\n        .replace(/_/g, '/');\r\n\r\n    var rawData = window.atob(base64);\r\n    var outputArray = new Uint8Array(rawData.length);\r\n\r\n    for (var i = 0; i < rawData.length; ++i) {\r\n        outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n}\r\n\r\nexport default class notification extends Component {\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLoading: false\r\n        }\r\n    }\r\n\r\n\r\n    configurePushSubscription = () => {\r\n\r\n        this.setState({ loading: true });\r\n        console.log(\"you are inside the web notification subscription code !!\");\r\n        if (!'Notification' in navigator) {\r\n            return;\r\n        }\r\n\r\n        let swRef;\r\n\r\n        navigator.serviceWorker.ready.then(sw => {\r\n            swRef = sw;\r\n            return swRef.pushManager.getSubscription(); // this allow to get the subscripition \r\n\r\n        }).then(sub => {\r\n            if (sub === null) {\r\n                // create a new subscription \r\n                console.log(\"we dont have the subcription\")\r\n\r\n                return swRef.pushManager.subscribe({\r\n                    userVisibleOnly: true,\r\n                    applicationServerKey: urlBase64ToUint8Array(publicVapidKey),\r\n                }).then(subscription => {\r\n                    console.log(\"user is subscribed\", subscription)\r\n                });\r\n            } else {\r\n                // we have a subscription ;\r\n                console.log(\"we have the subcription\", sub);\r\n                return sub;\r\n            }\r\n        }).then(function (newSub) {\r\n\r\n            // here you have to store this newsbu i.e. your subscription user to database\r\n            // with the help of newSub Request payload // you get the endpoing and keys {p256dh , auth}\r\n            // which is used to send the notification to the user \r\n            console.log(\"this is subsciriton body\", newSub);\r\n\r\n            let urlDb = \"https://pwa-serv-notify.herokuapp.com/api/pwa/subscribe\";\r\n            return fetch(urlDb, {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Accept': 'application/json'\r\n                },\r\n                body: JSON.stringify(newSub)\r\n            })\r\n        }).then(function (res) {\r\n            if (res.ok) {\r\n                console.log(\"new subscriber is added to DB \", res);\r\n                this.setState({ loading: false });\r\n\r\n                let subBtn = document.getElementById(\"sub-notification\");\r\n                subBtn.style.display = \"none\";\r\n            }\r\n        }).catch(function (err) {\r\n            this.setState({ loading: false });\r\n\r\n            console.log(\"server : App subscriber error \", err);\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Typography children=\"Notification\" variant=\"h6\" />\r\n\r\n                    {this.state.isLoading && <h3>Loading...</h3>}\r\n\r\n                    <h6>Start Notification from server </h6>\r\n                    <button onClick={() => this.configurePushSubscription()} >Start Server Notification</button>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}